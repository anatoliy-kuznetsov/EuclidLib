Set i circles / 1*9 /;
Alias(i,j);
Variables x(i), y(i), radius;
x.lo(i) = 0; x.up(i) = 1;
y.lo(i) = 0; y.up(i) = 1;
Equations non_overlap(i,j), boundary1(i), boundary2(i), boundary3(i);
boundary1(i).. x(i) =g= radius;
boundary2(i).. y(i) =g= radius;
boundary3(i).. (1 - x(i) - y(i)) / sqrt(2) =g= radius;
non_overlap(i,j)$(ord(j)>ord(i)).. power(x(i) - x(j), 2) + power(y(i) - y(j), 2) =g= power(2 * radius, 2);
x.l('1') = 0.11024060; y.l('1') = 0.11024060;
x.l('2') = 0.11024060; y.l('2') = 0.42204812;
x.l('3') = 0.11024060; y.l('3') = 0.73385564;
x.l('4') = 0.26614436; y.l('4') = 0.26614436;
x.l('5') = 0.26614436; y.l('5') = 0.57795188;
x.l('6') = 0.42204812; y.l('6') = 0.11024060;
x.l('7') = 0.42204812; y.l('7') = 0.42204812;
x.l('8') = 0.57795188; y.l('8') = 0.26614436;
x.l('9') = 0.73385564; y.l('9') = 0.11024060;
radius.l = 0.11024060;
Model m / all /;
Solve m using nlp maximizing radius;
