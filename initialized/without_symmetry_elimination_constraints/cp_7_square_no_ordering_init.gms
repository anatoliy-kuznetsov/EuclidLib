Set i circles / 1*7 /;
Alias(i,j);
Variables x(i), y(i), radius;
x.lo(i) = -0.5; x.up(i) = 0.5;
y.lo(i) = -0.5; y.up(i) = 0.5;
Equations non_overlap(i,j), boundary1(i), boundary2(i), boundary3(i), boundary4(i);
boundary1(i).. x(i) + radius =l= 0.5;
boundary2(i).. x(i) - radius =g= -0.5;
boundary3(i).. y(i) + radius =l= 0.5;
boundary4(i).. y(i) - radius =g= -0.5;
non_overlap(i,j)$(ord(j)>ord(i)).. power(x(i) - x(j), 2) + power(y(i) - y(j), 2) =g= power(2 * radius, 2);
x.l('1') = -0.32554237; y.l('1') = -0.32554237;
x.l('2') = -0.32554237; y.l('2') = 0.02337289;
x.l('3') = -0.15108474; y.l('3') = 0.32554237;
x.l('4') = 0.02337289; y.l('4') = -0.32554237;
x.l('5') = 0.02337289; y.l('5') = 0.02337289;
x.l('6') = 0.30000000; y.l('6') = 0.30000000;
x.l('7') = 0.32554237; y.l('7') = -0.15108474;
radius.l = 0.17445763;
Model m / all /;
Solve m using nlp maximizing radius;
