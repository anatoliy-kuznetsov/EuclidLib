# NLP written by GAMS Convert at 05/15/24 11:25:58
#
# Equation counts
#     Total        E        G        L        N        X        C        B
#       100      100        0        0        0        0        0        0
#
# Variable counts
#                  x        b        i      s1s      s2s       sc       si
#     Total     cont   binary  integer     sos1     sos2    scont     sint
#       306      306        0        0        0        0        0        0
# FX      0
#
# Nonzero counts
#     Total    const       NL
#       300      300        0
#
# Reformulation has removed 1 variable and 1 equation

using JuMP
using MathOptInterface
const MOI = MathOptInterface

model = m = Model()

@variable(m, 0 <= x1 <= 1, start=0)
@variable(m, 0 <= x2 <= 1, start=0)
@variable(m, 0 <= x3 <= 1, start=0)
@variable(m, 0 <= x4 <= 1, start=0)
@variable(m, 0 <= x5 <= 1, start=0)
@variable(m, 0 <= x6 <= 1, start=0)
@variable(m, 0 <= x7 <= 1, start=0)
@variable(m, 0 <= x8 <= 1, start=0)
@variable(m, 0 <= x9 <= 1, start=0)
@variable(m, 0 <= x10 <= 1, start=0)
@variable(m, 0 <= x11 <= 1, start=0)
@variable(m, 0 <= x12 <= 1, start=0)
@variable(m, 0 <= x13 <= 1, start=0)
@variable(m, 0 <= x14 <= 1, start=0)
@variable(m, 0 <= x15 <= 1, start=0)
@variable(m, 0 <= x16 <= 1, start=0)
@variable(m, 0 <= x17 <= 1, start=0)
@variable(m, 0 <= x18 <= 1, start=0)
@variable(m, 0 <= x19 <= 1, start=0)
@variable(m, 0 <= x20 <= 1, start=0)
@variable(m, 0 <= x21 <= 1, start=0)
@variable(m, 0 <= x22 <= 1, start=0)
@variable(m, 0 <= x23 <= 1, start=0)
@variable(m, 0 <= x24 <= 1, start=0)
@variable(m, 0 <= x25 <= 1, start=0)
@variable(m, 0 <= x26 <= 1, start=0)
@variable(m, 0 <= x27 <= 1, start=0)
@variable(m, 0 <= x28 <= 1, start=0)
@variable(m, 0 <= x29 <= 1, start=0)
@variable(m, 0 <= x30 <= 1, start=0)
@variable(m, 0 <= x31 <= 1, start=0)
@variable(m, 0 <= x32 <= 1, start=0)
@variable(m, 0 <= x33 <= 1, start=0)
@variable(m, 0 <= x34 <= 1, start=0)
@variable(m, 0 <= x35 <= 1, start=0)
@variable(m, 0 <= x36 <= 1, start=0)
@variable(m, 0 <= x37 <= 1, start=0)
@variable(m, 0 <= x38 <= 1, start=0)
@variable(m, 0 <= x39 <= 1, start=0)
@variable(m, 0 <= x40 <= 1, start=0)
@variable(m, 0 <= x41 <= 1, start=0)
@variable(m, 0 <= x42 <= 1, start=0)
@variable(m, 0 <= x43 <= 1, start=0)
@variable(m, 0 <= x44 <= 1, start=0)
@variable(m, 0 <= x45 <= 1, start=0)
@variable(m, 0 <= x46 <= 1, start=0)
@variable(m, 0 <= x47 <= 1, start=0)
@variable(m, 0 <= x48 <= 1, start=0)
@variable(m, 0 <= x49 <= 1, start=0)
@variable(m, 0 <= x50 <= 1, start=0)
@variable(m, 0 <= x51 <= 1, start=0)
@variable(m, 0 <= x52 <= 1, start=0)
@variable(m, 0 <= x53 <= 1, start=0)
@variable(m, 0 <= x54 <= 1, start=0)
@variable(m, 0 <= x55 <= 1, start=0)
@variable(m, 0 <= x56 <= 1, start=0)
@variable(m, 0 <= x57 <= 1, start=0)
@variable(m, 0 <= x58 <= 1, start=0)
@variable(m, 0 <= x59 <= 1, start=0)
@variable(m, 0 <= x60 <= 1, start=0)
@variable(m, 0 <= x61 <= 1, start=0)
@variable(m, 0 <= x62 <= 1, start=0)
@variable(m, 0 <= x63 <= 1, start=0)
@variable(m, 0 <= x64 <= 1, start=0)
@variable(m, 0 <= x65 <= 1, start=0)
@variable(m, 0 <= x66 <= 1, start=0)
@variable(m, 0 <= x67 <= 1, start=0)
@variable(m, 0 <= x68 <= 1, start=0)
@variable(m, 0 <= x69 <= 1, start=0)
@variable(m, 0 <= x70 <= 1, start=0)
@variable(m, 0 <= x71 <= 1, start=0)
@variable(m, 0 <= x72 <= 1, start=0)
@variable(m, 0 <= x73 <= 1, start=0)
@variable(m, 0 <= x74 <= 1, start=0)
@variable(m, 0 <= x75 <= 1, start=0)
@variable(m, 0 <= x76 <= 1, start=0)
@variable(m, 0 <= x77 <= 1, start=0)
@variable(m, 0 <= x78 <= 1, start=0)
@variable(m, 0 <= x79 <= 1, start=0)
@variable(m, 0 <= x80 <= 1, start=0)
@variable(m, 0 <= x81 <= 1, start=0)
@variable(m, 0 <= x82 <= 1, start=0)
@variable(m, 0 <= x83 <= 1, start=0)
@variable(m, 0 <= x84 <= 1, start=0)
@variable(m, 0 <= x85 <= 1, start=0)
@variable(m, 0 <= x86 <= 1, start=0)
@variable(m, 0 <= x87 <= 1, start=0)
@variable(m, 0 <= x88 <= 1, start=0)
@variable(m, 0 <= x89 <= 1, start=0)
@variable(m, 0 <= x90 <= 1, start=0)
@variable(m, 0 <= x91 <= 1, start=0)
@variable(m, 0 <= x92 <= 1, start=0)
@variable(m, 0 <= x93 <= 1, start=0)
@variable(m, 0 <= x94 <= 1, start=0)
@variable(m, 0 <= x95 <= 1, start=0)
@variable(m, 0 <= x96 <= 1, start=0)
@variable(m, 0 <= x97 <= 1, start=0)
@variable(m, 0 <= x98 <= 1, start=0)
@variable(m, 0 <= x99 <= 1, start=0)
@variable(m, 0 <= x100 <= 1, start=0)
@variable(m, 0 <= x101 <= 1, start=0)
@variable(m, 0 <= x102 <= 1, start=0)
@variable(m, 0 <= x103 <= 1, start=0)
@variable(m, 0 <= x104 <= 1, start=0)
@variable(m, 0 <= x105 <= 1, start=0)
@variable(m, 0 <= x106 <= 1, start=0)
@variable(m, 0 <= x107 <= 1, start=0)
@variable(m, 0 <= x108 <= 1, start=0)
@variable(m, 0 <= x109 <= 1, start=0)
@variable(m, 0 <= x110 <= 1, start=0)
@variable(m, 0 <= x111 <= 1, start=0)
@variable(m, 0 <= x112 <= 1, start=0)
@variable(m, 0 <= x113 <= 1, start=0)
@variable(m, 0 <= x114 <= 1, start=0)
@variable(m, 0 <= x115 <= 1, start=0)
@variable(m, 0 <= x116 <= 1, start=0)
@variable(m, 0 <= x117 <= 1, start=0)
@variable(m, 0 <= x118 <= 1, start=0)
@variable(m, 0 <= x119 <= 1, start=0)
@variable(m, 0 <= x120 <= 1, start=0)
@variable(m, 0 <= x121 <= 1, start=0)
@variable(m, 0 <= x122 <= 1, start=0)
@variable(m, 0 <= x123 <= 1, start=0)
@variable(m, 0 <= x124 <= 1, start=0)
@variable(m, 0 <= x125 <= 1, start=0)
@variable(m, 0 <= x126 <= 1, start=0)
@variable(m, 0 <= x127 <= 1, start=0)
@variable(m, 0 <= x128 <= 1, start=0)
@variable(m, 0 <= x129 <= 1, start=0)
@variable(m, 0 <= x130 <= 1, start=0)
@variable(m, 0 <= x131 <= 1, start=0)
@variable(m, 0 <= x132 <= 1, start=0)
@variable(m, 0 <= x133 <= 1, start=0)
@variable(m, 0 <= x134 <= 1, start=0)
@variable(m, 0 <= x135 <= 1, start=0)
@variable(m, 0 <= x136 <= 1, start=0)
@variable(m, 0 <= x137 <= 1, start=0)
@variable(m, 0 <= x138 <= 1, start=0)
@variable(m, 0 <= x139 <= 1, start=0)
@variable(m, 0 <= x140 <= 1, start=0)
@variable(m, 0 <= x141 <= 1, start=0)
@variable(m, 0 <= x142 <= 1, start=0)
@variable(m, 0 <= x143 <= 1, start=0)
@variable(m, 0 <= x144 <= 1, start=0)
@variable(m, 0 <= x145 <= 1, start=0)
@variable(m, 0 <= x146 <= 1, start=0)
@variable(m, 0 <= x147 <= 1, start=0)
@variable(m, 0 <= x148 <= 1, start=0)
@variable(m, 0 <= x149 <= 1, start=0)
@variable(m, 0 <= x150 <= 1, start=0)
@variable(m, 0 <= x151 <= 1, start=0)
@variable(m, 0 <= x152 <= 1, start=0)
@variable(m, 0 <= x153 <= 1, start=0)
@variable(m, 0 <= x154 <= 1, start=0)
@variable(m, 0 <= x155 <= 1, start=0)
@variable(m, 0 <= x156 <= 1, start=0)
@variable(m, 0 <= x157 <= 1, start=0)
@variable(m, 0 <= x158 <= 1, start=0)
@variable(m, 0 <= x159 <= 1, start=0)
@variable(m, 0 <= x160 <= 1, start=0)
@variable(m, 0 <= x161 <= 1, start=0)
@variable(m, 0 <= x162 <= 1, start=0)
@variable(m, 0 <= x163 <= 1, start=0)
@variable(m, 0 <= x164 <= 1, start=0)
@variable(m, 0 <= x165 <= 1, start=0)
@variable(m, 0 <= x166 <= 1, start=0)
@variable(m, 0 <= x167 <= 1, start=0)
@variable(m, 0 <= x168 <= 1, start=0)
@variable(m, 0 <= x169 <= 1, start=0)
@variable(m, 0 <= x170 <= 1, start=0)
@variable(m, 0 <= x171 <= 1, start=0)
@variable(m, 0 <= x172 <= 1, start=0)
@variable(m, 0 <= x173 <= 1, start=0)
@variable(m, 0 <= x174 <= 1, start=0)
@variable(m, 0 <= x175 <= 1, start=0)
@variable(m, 0 <= x176 <= 1, start=0)
@variable(m, 0 <= x177 <= 1, start=0)
@variable(m, 0 <= x178 <= 1, start=0)
@variable(m, 0 <= x179 <= 1, start=0)
@variable(m, 0 <= x180 <= 1, start=0)
@variable(m, 0 <= x181 <= 1, start=0)
@variable(m, 0 <= x182 <= 1, start=0)
@variable(m, 0 <= x183 <= 1, start=0)
@variable(m, 0 <= x184 <= 1, start=0)
@variable(m, 0 <= x185 <= 1, start=0)
@variable(m, 0 <= x186 <= 1, start=0)
@variable(m, 0 <= x187 <= 1, start=0)
@variable(m, 0 <= x188 <= 1, start=0)
@variable(m, 0 <= x189 <= 1, start=0)
@variable(m, 0 <= x190 <= 1, start=0)
@variable(m, 0 <= x191 <= 1, start=0)
@variable(m, 0 <= x192 <= 1, start=0)
@variable(m, 0 <= x193 <= 1, start=0)
@variable(m, 0 <= x194 <= 1, start=0)
@variable(m, 0 <= x195 <= 1, start=0)
@variable(m, 0 <= x196 <= 1, start=0)
@variable(m, 0 <= x197 <= 1, start=0)
@variable(m, 0 <= x198 <= 1, start=0)
@variable(m, 0 <= x199 <= 1, start=0)
@variable(m, 0 <= x200 <= 1, start=0)
@variable(m, 0 <= x201 <= 1, start=0)
@variable(m, 0 <= x202 <= 1, start=0)
@variable(m, 0 <= x203 <= 1, start=0)
@variable(m, 0 <= x204 <= 1, start=0)
@variable(m, 0 <= x205 <= 1, start=0)
@variable(m, 0 <= x206 <= 1, start=0)
@variable(m, 0 <= x207 <= 1, start=0)
@variable(m, 0 <= x208 <= 1, start=0)
@variable(m, 0 <= x209 <= 1, start=0)
@variable(m, 0 <= x210 <= 1, start=0)
@variable(m, 0 <= x211 <= 1, start=0)
@variable(m, 0 <= x212 <= 1, start=0)
@variable(m, 0 <= x213 <= 1, start=0)
@variable(m, 0 <= x214 <= 1, start=0)
@variable(m, 0 <= x215 <= 1, start=0)
@variable(m, 0 <= x216 <= 1, start=0)
@variable(m, 0 <= x217 <= 1, start=0)
@variable(m, 0 <= x218 <= 1, start=0)
@variable(m, 0 <= x219 <= 1, start=0)
@variable(m, 0 <= x220 <= 1, start=0)
@variable(m, 0 <= x221 <= 1, start=0)
@variable(m, 0 <= x222 <= 1, start=0)
@variable(m, 0 <= x223 <= 1, start=0)
@variable(m, 0 <= x224 <= 1, start=0)
@variable(m, 0 <= x225 <= 1, start=0)
@variable(m, 0 <= x226 <= 1, start=0)
@variable(m, 0 <= x227 <= 1, start=0)
@variable(m, 0 <= x228 <= 1, start=0)
@variable(m, 0 <= x229 <= 1, start=0)
@variable(m, 0 <= x230 <= 1, start=0)
@variable(m, 0 <= x231 <= 1, start=0)
@variable(m, 0 <= x232 <= 1, start=0)
@variable(m, 0 <= x233 <= 1, start=0)
@variable(m, 0 <= x234 <= 1, start=0)
@variable(m, 0 <= x235 <= 1, start=0)
@variable(m, 0 <= x236 <= 1, start=0)
@variable(m, 0 <= x237 <= 1, start=0)
@variable(m, 0 <= x238 <= 1, start=0)
@variable(m, 0 <= x239 <= 1, start=0)
@variable(m, 0 <= x240 <= 1, start=0)
@variable(m, 0 <= x241 <= 1, start=0)
@variable(m, 0 <= x242 <= 1, start=0)
@variable(m, 0 <= x243 <= 1, start=0)
@variable(m, 0 <= x244 <= 1, start=0)
@variable(m, 0 <= x245 <= 1, start=0)
@variable(m, 0 <= x246 <= 1, start=0)
@variable(m, 0 <= x247 <= 1, start=0)
@variable(m, 0 <= x248 <= 1, start=0)
@variable(m, 0 <= x249 <= 1, start=0)
@variable(m, 0 <= x250 <= 1, start=0)
@variable(m, 0 <= x251 <= 1, start=0)
@variable(m, 0 <= x252 <= 1, start=0)
@variable(m, 0 <= x253 <= 1, start=0)
@variable(m, 0 <= x254 <= 1, start=0)
@variable(m, 0 <= x255 <= 1, start=0)
@variable(m, 0 <= x256 <= 1, start=0)
@variable(m, 0 <= x257 <= 1, start=0)
@variable(m, 0 <= x258 <= 1, start=0)
@variable(m, 0 <= x259 <= 1, start=0)
@variable(m, 0 <= x260 <= 1, start=0)
@variable(m, 0 <= x261 <= 1, start=0)
@variable(m, 0 <= x262 <= 1, start=0)
@variable(m, 0 <= x263 <= 1, start=0)
@variable(m, 0 <= x264 <= 1, start=0)
@variable(m, 0 <= x265 <= 1, start=0)
@variable(m, 0 <= x266 <= 1, start=0)
@variable(m, 0 <= x267 <= 1, start=0)
@variable(m, 0 <= x268 <= 1, start=0)
@variable(m, 0 <= x269 <= 1, start=0)
@variable(m, 0 <= x270 <= 1, start=0)
@variable(m, 0 <= x271 <= 1, start=0)
@variable(m, 0 <= x272 <= 1, start=0)
@variable(m, 0 <= x273 <= 1, start=0)
@variable(m, 0 <= x274 <= 1, start=0)
@variable(m, 0 <= x275 <= 1, start=0)
@variable(m, 0 <= x276 <= 1, start=0)
@variable(m, 0 <= x277 <= 1, start=0)
@variable(m, 0 <= x278 <= 1, start=0)
@variable(m, 0 <= x279 <= 1, start=0)
@variable(m, 0 <= x280 <= 1, start=0)
@variable(m, 0 <= x281 <= 1, start=0)
@variable(m, 0 <= x282 <= 1, start=0)
@variable(m, 0 <= x283 <= 1, start=0)
@variable(m, 0 <= x284 <= 1, start=0)
@variable(m, 0 <= x285 <= 1, start=0)
@variable(m, 0 <= x286 <= 1, start=0)
@variable(m, 0 <= x287 <= 1, start=0)
@variable(m, 0 <= x288 <= 1, start=0)
@variable(m, 0 <= x289 <= 1, start=0)
@variable(m, 0 <= x290 <= 1, start=0)
@variable(m, 0 <= x291 <= 1, start=0)
@variable(m, 0 <= x292 <= 1, start=0)
@variable(m, 0 <= x293 <= 1, start=0)
@variable(m, 0 <= x294 <= 1, start=0)
@variable(m, 0 <= x295 <= 1, start=0)
@variable(m, 0 <= x296 <= 1, start=0)
@variable(m, 0 <= x297 <= 1, start=0)
@variable(m, 0 <= x298 <= 1, start=0)
@variable(m, 0 <= x299 <= 1, start=0)
@variable(m, 0 <= x300 <= 1, start=0)
@variable(m, 0 <= x301 <= 1, start=0)
@variable(m, 0 <= x302 <= 1, start=0)
@variable(m, 0 <= x303 <= 1, start=0)
@variable(m, 0 <= x304 <= 1, start=0)
@variable(m, 0 <= x305 <= 1, start=0)
@variable(m, 0 <= x306 <= 1, start=0)

@NLobjective(m, Min, x7 * ((-0.09075818242392208 + x1)^2 + (-0.8421079776592801
    + x2)^2) + x8 * ((-0.6004522437099808 + x1)^2 + (-0.21263042858868297 + x2)
    ^2) + x9 * ((-0.7796888052878697 + x1)^2 + (-0.594607792619549 + x2)^2) +
    x10 * ((-0.8280428816489178 + x1)^2 + (-0.6117694619049227 + x2)^2) + x11
    * ((-0.7232635246380339 + x1)^2 + (-0.775046380224854 + x2)^2) + x12 * ((
    -0.3441150906887649 + x1)^2 + (-0.09591837784379154 + x2)^2) + x13 * ((
    -0.8978018174450971 + x1)^2 + (-0.11743401812053855 + x2)^2) + x14 * ((
    -0.55682365402602 + x1)^2 + (-0.9913046724886798 + x2)^2) + x15 * ((
    -0.3505034340325558 + x1)^2 + (-0.2614391117299726 + x2)^2) + x16 * ((
    -0.3824468288111288 + x1)^2 + (-0.20220584044474332 + x2)^2) + x17 * ((
    -0.7498554818721458 + x1)^2 + (-0.2980988319317168 + x2)^2) + x18 * ((
    -0.07321113686532232 + x1)^2 + (-0.5954543460403101 + x2)^2) + x19 * ((
    -0.2591946170455186 + x1)^2 + (-0.17900103418991686 + x2)^2) + x20 * ((
    -0.01679199868038328 + x1)^2 + (-0.8388400298206995 + x2)^2) + x21 * ((
    -0.37772078666940234 + x1)^2 + (-0.5999660129800334 + x2)^2) + x22 * ((
    -0.48068712289031845 + x1)^2 + (-0.869272912824029 + x2)^2) + x23 * ((
    -0.06731672306732117 + x1)^2 + (-0.633941896159872 + x2)^2) + x24 * ((
    -0.82972309353278 + x1)^2 + (-0.2819959347943841 + x2)^2) + x25 * ((
    -0.4336964173301845 + x1)^2 + (-0.3365710275789563 + x2)^2) + x26 * ((
    -0.32388608941489017 + x1)^2 + (-0.9453815506006258 + x2)^2) + x27 * ((
    -0.22860079388436005 + x1)^2 + (-0.7378173460947715 + x2)^2) + x28 * ((
    -0.044228036986523334 + x1)^2 + (-0.7815501177884507 + x2)^2) + x29 * ((
    -0.08043624219732093 + x1)^2 + (-0.7893569476421274 + x2)^2) + x30 * ((
    -0.06584041867144719 + x1)^2 + (-0.21534482582658754 + x2)^2) + x31 * ((
    -0.2637962086928157 + x1)^2 + (-0.2815287894707502 + x2)^2) + x32 * ((
    -0.7768911997798632 + x1)^2 + (-0.5045725783219106 + x2)^2) + x33 * ((
    -0.04578282615703744 + x1)^2 + (-0.18267404955070377 + x2)^2) + x34 * ((
    -0.4189753804741293 + x1)^2 + (-0.7106072440375385 + x2)^2) + x35 * ((
    -0.6406679155857211 + x1)^2 + (-0.48003679153199974 + x2)^2) + x36 * ((
    -0.8075575156075806 + x1)^2 + (-0.9463374617065154 + x2)^2) + x37 * ((
    -0.9494783754127006 + x1)^2 + (-0.991498001949757 + x2)^2) + x38 * ((
    -0.9193098198259494 + x1)^2 + (-0.9861536873250794 + x2)^2) + x39 * ((
    -0.7164219770083897 + x1)^2 + (-0.6923582419906285 + x2)^2) + x40 * ((
    -0.5833953772276935 + x1)^2 + (-0.39111319713457526 + x2)^2) + x41 * ((
    -0.837098292307243 + x1)^2 + (-0.38192022803643044 + x2)^2) + x42 * ((
    -0.9057165619357027 + x1)^2 + (-0.44142026666630774 + x2)^2) + x43 * ((
    -0.022143901365561658 + x1)^2 + (-0.8476360117762948 + x2)^2) + x44 * ((
    -0.48474449470792136 + x1)^2 + (-0.00459266186465912 + x2)^2) + x45 * ((
    -0.817975273750891 + x1)^2 + (-0.7943398076449755 + x2)^2) + x46 * ((
    -0.8763576508107064 + x1)^2 + (-0.4641969432665859 + x2)^2) + x47 * ((
    -0.16768907807527522 + x1)^2 + (-0.2170634659028503 + x2)^2) + x48 * ((
    -0.5373771347576884 + x1)^2 + (-0.6717398317968319 + x2)^2) + x49 * ((
    -0.5572182447521413 + x1)^2 + (-0.24059245819741681 + x2)^2) + x50 * ((
    -0.1478639049629319 + x1)^2 + (-0.9734391500956013 + x2)^2) + x51 * ((
    -0.9978674296675508 + x1)^2 + (-0.940321306057178 + x2)^2) + x52 * ((
    -0.5198249152613603 + x1)^2 + (-0.07814164651753441 + x2)^2) + x53 * ((
    -0.2206544748113004 + x1)^2 + (-0.5529047264313456 + x2)^2) + x54 * ((
    -0.8708713492140824 + x1)^2 + (-0.6958022669870113 + x2)^2) + x55 * ((
    -0.10823774288352628 + x1)^2 + (-0.915893092354332 + x2)^2) + x56 * ((
    -0.641766743884591 + x1)^2 + (-0.42982985602002743 + x2)^2) + x57 * ((
    -0.769965120581223 + x1)^2 + (-0.4093180346858043 + x2)^2) + x58 * ((
    -0.5395061655932872 + x1)^2 + (-0.025554298316395885 + x2)^2) + x59 * ((
    -0.07610548086145708 + x1)^2 + (-0.9300387630629019 + x2)^2) + x60 * ((
    -0.42188661474763056 + x1)^2 + (-0.7909513854242108 + x2)^2) + x61 * ((
    -0.371398443903442 + x1)^2 + (-0.3924282936519774 + x2)^2) + x62 * ((
    -0.11106976179816641 + x1)^2 + (-0.8961539552567241 + x2)^2) + x63 * ((
    -0.25225491988669413 + x1)^2 + (-0.7663134725002734 + x2)^2) + x64 * ((
    -0.1778448829280641 + x1)^2 + (-0.3035505722762858 + x2)^2) + x65 * ((
    -0.08846844345193006 + x1)^2 + (-0.695683685601309 + x2)^2) + x66 * ((
    -0.9178016597694366 + x1)^2 + (-0.627158371143039 + x2)^2) + x67 * ((
    -0.6443309388504812 + x1)^2 + (-0.2486686334041649 + x2)^2) + x68 * ((
    -0.9524214315197214 + x1)^2 + (-0.11319191562464526 + x2)^2) + x69 * ((
    -0.2503629075652184 + x1)^2 + (-0.5661083721487875 + x2)^2) + x70 * ((
    -0.6399923314007278 + x1)^2 + (-0.2871936662554734 + x2)^2) + x71 * ((
    -0.5909678451374885 + x1)^2 + (-0.11513193031994995 + x2)^2) + x72 * ((
    -0.04877753856435085 + x1)^2 + (-0.42558284132001833 + x2)^2) + x73 * ((
    -0.5769401342223824 + x1)^2 + (-0.882886241480543 + x2)^2) + x74 * ((
    -0.46693829720314983 + x1)^2 + (-0.9356416589786831 + x2)^2) + x75 * ((
    -0.7666488385496458 + x1)^2 + (-0.9715298035824393 + x2)^2) + x76 * ((
    -0.7090808859061516 + x1)^2 + (-0.4227160317233293 + x2)^2) + x77 * ((
    -0.6362788867985969 + x1)^2 + (-0.6897106599456068 + x2)^2) + x78 * ((
    -0.255234369371772 + x1)^2 + (-0.17269883755498971 + x2)^2) + x79 * ((
    -0.32354052437441105 + x1)^2 + (-0.5414620932536305 + x2)^2) + x80 * ((
    -0.05061498170688461 + x1)^2 + (-0.35735103685050085 + x2)^2) + x81 * ((
    -0.14474828789786598 + x1)^2 + (-0.935524701349798 + x2)^2) + x82 * ((
    -0.4521811868578507 + x1)^2 + (-0.5684301129850728 + x2)^2) + x83 * ((
    -0.1391588120468895 + x1)^2 + (-0.450912724117135 + x2)^2) + x84 * ((
    -0.9624575143884582 + x1)^2 + (-0.8342971742225577 + x2)^2) + x85 * ((
    -0.9119608671435646 + x1)^2 + (-0.16311646954688963 + x2)^2) + x86 * ((
    -0.8601502139251708 + x1)^2 + (-0.8094641566594614 + x2)^2) + x87 * ((
    -0.3789359642178741 + x1)^2 + (-0.34458507559213336 + x2)^2) + x88 * ((
    -0.9114125110384265 + x1)^2 + (-0.30087502888988404 + x2)^2) + x89 * ((
    -0.26441815851376227 + x1)^2 + (-0.6432639278749842 + x2)^2) + x90 * ((
    -0.5040138219051838 + x1)^2 + (-0.436711978156451 + x2)^2) + x91 * ((
    -0.42408540833910613 + x1)^2 + (-0.7144533169040485 + x2)^2) + x92 * ((
    -0.7222403067943077 + x1)^2 + (-0.44905804057404974 + x2)^2) + x93 * ((
    -0.9396234683501675 + x1)^2 + (-0.26913749666376663 + x2)^2) + x94 * ((
    -0.2790684514984879 + x1)^2 + (-0.38848808536128043 + x2)^2) + x95 * ((
    -0.0023428037609517505 + x1)^2 + (-0.5050951718570706 + x2)^2) + x96 * ((
    -0.4770114774545686 + x1)^2 + (-0.2671796475851538 + x2)^2) + x97 * ((
    -0.4508813622466006 + x1)^2 + (-0.4772479476478516 + x2)^2) + x98 * ((
    -0.5802987597800233 + x1)^2 + (-0.5447533523575115 + x2)^2) + x99 * ((
    -0.3417733382726399 + x1)^2 + (-0.36547565910865576 + x2)^2) + x100 * ((
    -0.8660746835055481 + x1)^2 + (-0.06852013071726426 + x2)^2) + x101 * ((
    -0.8912654289001969 + x1)^2 + (-0.13480953224510595 + x2)^2) + x102 * ((
    -0.1717093974981898 + x1)^2 + (-0.4333331682797753 + x2)^2) + x103 * ((
    -0.9880935005856811 + x1)^2 + (-0.22149623450972045 + x2)^2) + x104 * ((
    -0.05074359135359818 + x1)^2 + (-0.7593065812217639 + x2)^2) + x105 * ((
    -0.5089474327061579 + x1)^2 + (-0.13233399599992335 + x2)^2) + x106 * ((
    -0.8898331485351556 + x1)^2 + (-0.5844278795567586 + x2)^2) + x107 * ((
    -0.09075818242392208 + x3)^2 + (-0.8421079776592801 + x4)^2) + x108 * ((
    -0.6004522437099808 + x3)^2 + (-0.21263042858868297 + x4)^2) + x109 * ((
    -0.7796888052878697 + x3)^2 + (-0.594607792619549 + x4)^2) + x110 * ((
    -0.8280428816489178 + x3)^2 + (-0.6117694619049227 + x4)^2) + x111 * ((
    -0.7232635246380339 + x3)^2 + (-0.775046380224854 + x4)^2) + x112 * ((
    -0.3441150906887649 + x3)^2 + (-0.09591837784379154 + x4)^2) + x113 * ((
    -0.8978018174450971 + x3)^2 + (-0.11743401812053855 + x4)^2) + x114 * ((
    -0.55682365402602 + x3)^2 + (-0.9913046724886798 + x4)^2) + x115 * ((
    -0.3505034340325558 + x3)^2 + (-0.2614391117299726 + x4)^2) + x116 * ((
    -0.3824468288111288 + x3)^2 + (-0.20220584044474332 + x4)^2) + x117 * ((
    -0.7498554818721458 + x3)^2 + (-0.2980988319317168 + x4)^2) + x118 * ((
    -0.07321113686532232 + x3)^2 + (-0.5954543460403101 + x4)^2) + x119 * ((
    -0.2591946170455186 + x3)^2 + (-0.17900103418991686 + x4)^2) + x120 * ((
    -0.01679199868038328 + x3)^2 + (-0.8388400298206995 + x4)^2) + x121 * ((
    -0.37772078666940234 + x3)^2 + (-0.5999660129800334 + x4)^2) + x122 * ((
    -0.48068712289031845 + x3)^2 + (-0.869272912824029 + x4)^2) + x123 * ((
    -0.06731672306732117 + x3)^2 + (-0.633941896159872 + x4)^2) + x124 * ((
    -0.82972309353278 + x3)^2 + (-0.2819959347943841 + x4)^2) + x125 * ((
    -0.4336964173301845 + x3)^2 + (-0.3365710275789563 + x4)^2) + x126 * ((
    -0.32388608941489017 + x3)^2 + (-0.9453815506006258 + x4)^2) + x127 * ((
    -0.22860079388436005 + x3)^2 + (-0.7378173460947715 + x4)^2) + x128 * ((
    -0.044228036986523334 + x3)^2 + (-0.7815501177884507 + x4)^2) + x129 * ((
    -0.08043624219732093 + x3)^2 + (-0.7893569476421274 + x4)^2) + x130 * ((
    -0.06584041867144719 + x3)^2 + (-0.21534482582658754 + x4)^2) + x131 * ((
    -0.2637962086928157 + x3)^2 + (-0.2815287894707502 + x4)^2) + x132 * ((
    -0.7768911997798632 + x3)^2 + (-0.5045725783219106 + x4)^2) + x133 * ((
    -0.04578282615703744 + x3)^2 + (-0.18267404955070377 + x4)^2) + x134 * ((
    -0.4189753804741293 + x3)^2 + (-0.7106072440375385 + x4)^2) + x135 * ((
    -0.6406679155857211 + x3)^2 + (-0.48003679153199974 + x4)^2) + x136 * ((
    -0.8075575156075806 + x3)^2 + (-0.9463374617065154 + x4)^2) + x137 * ((
    -0.9494783754127006 + x3)^2 + (-0.991498001949757 + x4)^2) + x138 * ((
    -0.9193098198259494 + x3)^2 + (-0.9861536873250794 + x4)^2) + x139 * ((
    -0.7164219770083897 + x3)^2 + (-0.6923582419906285 + x4)^2) + x140 * ((
    -0.5833953772276935 + x3)^2 + (-0.39111319713457526 + x4)^2) + x141 * ((
    -0.837098292307243 + x3)^2 + (-0.38192022803643044 + x4)^2) + x142 * ((
    -0.9057165619357027 + x3)^2 + (-0.44142026666630774 + x4)^2) + x143 * ((
    -0.022143901365561658 + x3)^2 + (-0.8476360117762948 + x4)^2) + x144 * ((
    -0.48474449470792136 + x3)^2 + (-0.00459266186465912 + x4)^2) + x145 * ((
    -0.817975273750891 + x3)^2 + (-0.7943398076449755 + x4)^2) + x146 * ((
    -0.8763576508107064 + x3)^2 + (-0.4641969432665859 + x4)^2) + x147 * ((
    -0.16768907807527522 + x3)^2 + (-0.2170634659028503 + x4)^2) + x148 * ((
    -0.5373771347576884 + x3)^2 + (-0.6717398317968319 + x4)^2) + x149 * ((
    -0.5572182447521413 + x3)^2 + (-0.24059245819741681 + x4)^2) + x150 * ((
    -0.1478639049629319 + x3)^2 + (-0.9734391500956013 + x4)^2) + x151 * ((
    -0.9978674296675508 + x3)^2 + (-0.940321306057178 + x4)^2) + x152 * ((
    -0.5198249152613603 + x3)^2 + (-0.07814164651753441 + x4)^2) + x153 * ((
    -0.2206544748113004 + x3)^2 + (-0.5529047264313456 + x4)^2) + x154 * ((
    -0.8708713492140824 + x3)^2 + (-0.6958022669870113 + x4)^2) + x155 * ((
    -0.10823774288352628 + x3)^2 + (-0.915893092354332 + x4)^2) + x156 * ((
    -0.641766743884591 + x3)^2 + (-0.42982985602002743 + x4)^2) + x157 * ((
    -0.769965120581223 + x3)^2 + (-0.4093180346858043 + x4)^2) + x158 * ((
    -0.5395061655932872 + x3)^2 + (-0.025554298316395885 + x4)^2) + x159 * ((
    -0.07610548086145708 + x3)^2 + (-0.9300387630629019 + x4)^2) + x160 * ((
    -0.42188661474763056 + x3)^2 + (-0.7909513854242108 + x4)^2) + x161 * ((
    -0.371398443903442 + x3)^2 + (-0.3924282936519774 + x4)^2) + x162 * ((
    -0.11106976179816641 + x3)^2 + (-0.8961539552567241 + x4)^2) + x163 * ((
    -0.25225491988669413 + x3)^2 + (-0.7663134725002734 + x4)^2) + x164 * ((
    -0.1778448829280641 + x3)^2 + (-0.3035505722762858 + x4)^2) + x165 * ((
    -0.08846844345193006 + x3)^2 + (-0.695683685601309 + x4)^2) + x166 * ((
    -0.9178016597694366 + x3)^2 + (-0.627158371143039 + x4)^2) + x167 * ((
    -0.6443309388504812 + x3)^2 + (-0.2486686334041649 + x4)^2) + x168 * ((
    -0.9524214315197214 + x3)^2 + (-0.11319191562464526 + x4)^2) + x169 * ((
    -0.2503629075652184 + x3)^2 + (-0.5661083721487875 + x4)^2) + x170 * ((
    -0.6399923314007278 + x3)^2 + (-0.2871936662554734 + x4)^2) + x171 * ((
    -0.5909678451374885 + x3)^2 + (-0.11513193031994995 + x4)^2) + x172 * ((
    -0.04877753856435085 + x3)^2 + (-0.42558284132001833 + x4)^2) + x173 * ((
    -0.5769401342223824 + x3)^2 + (-0.882886241480543 + x4)^2) + x174 * ((
    -0.46693829720314983 + x3)^2 + (-0.9356416589786831 + x4)^2) + x175 * ((
    -0.7666488385496458 + x3)^2 + (-0.9715298035824393 + x4)^2) + x176 * ((
    -0.7090808859061516 + x3)^2 + (-0.4227160317233293 + x4)^2) + x177 * ((
    -0.6362788867985969 + x3)^2 + (-0.6897106599456068 + x4)^2) + x178 * ((
    -0.255234369371772 + x3)^2 + (-0.17269883755498971 + x4)^2) + x179 * ((
    -0.32354052437441105 + x3)^2 + (-0.5414620932536305 + x4)^2) + x180 * ((
    -0.05061498170688461 + x3)^2 + (-0.35735103685050085 + x4)^2) + x181 * ((
    -0.14474828789786598 + x3)^2 + (-0.935524701349798 + x4)^2) + x182 * ((
    -0.4521811868578507 + x3)^2 + (-0.5684301129850728 + x4)^2) + x183 * ((
    -0.1391588120468895 + x3)^2 + (-0.450912724117135 + x4)^2) + x184 * ((
    -0.9624575143884582 + x3)^2 + (-0.8342971742225577 + x4)^2) + x185 * ((
    -0.9119608671435646 + x3)^2 + (-0.16311646954688963 + x4)^2) + x186 * ((
    -0.8601502139251708 + x3)^2 + (-0.8094641566594614 + x4)^2) + x187 * ((
    -0.3789359642178741 + x3)^2 + (-0.34458507559213336 + x4)^2) + x188 * ((
    -0.9114125110384265 + x3)^2 + (-0.30087502888988404 + x4)^2) + x189 * ((
    -0.26441815851376227 + x3)^2 + (-0.6432639278749842 + x4)^2) + x190 * ((
    -0.5040138219051838 + x3)^2 + (-0.436711978156451 + x4)^2) + x191 * ((
    -0.42408540833910613 + x3)^2 + (-0.7144533169040485 + x4)^2) + x192 * ((
    -0.7222403067943077 + x3)^2 + (-0.44905804057404974 + x4)^2) + x193 * ((
    -0.9396234683501675 + x3)^2 + (-0.26913749666376663 + x4)^2) + x194 * ((
    -0.2790684514984879 + x3)^2 + (-0.38848808536128043 + x4)^2) + x195 * ((
    -0.0023428037609517505 + x3)^2 + (-0.5050951718570706 + x4)^2) + x196 * ((
    -0.4770114774545686 + x3)^2 + (-0.2671796475851538 + x4)^2) + x197 * ((
    -0.4508813622466006 + x3)^2 + (-0.4772479476478516 + x4)^2) + x198 * ((
    -0.5802987597800233 + x3)^2 + (-0.5447533523575115 + x4)^2) + x199 * ((
    -0.3417733382726399 + x3)^2 + (-0.36547565910865576 + x4)^2) + x200 * ((
    -0.8660746835055481 + x3)^2 + (-0.06852013071726426 + x4)^2) + x201 * ((
    -0.8912654289001969 + x3)^2 + (-0.13480953224510595 + x4)^2) + x202 * ((
    -0.1717093974981898 + x3)^2 + (-0.4333331682797753 + x4)^2) + x203 * ((
    -0.9880935005856811 + x3)^2 + (-0.22149623450972045 + x4)^2) + x204 * ((
    -0.05074359135359818 + x3)^2 + (-0.7593065812217639 + x4)^2) + x205 * ((
    -0.5089474327061579 + x3)^2 + (-0.13233399599992335 + x4)^2) + x206 * ((
    -0.8898331485351556 + x3)^2 + (-0.5844278795567586 + x4)^2) + x207 * ((
    -0.09075818242392208 + x5)^2 + (-0.8421079776592801 + x6)^2) + x208 * ((
    -0.6004522437099808 + x5)^2 + (-0.21263042858868297 + x6)^2) + x209 * ((
    -0.7796888052878697 + x5)^2 + (-0.594607792619549 + x6)^2) + x210 * ((
    -0.8280428816489178 + x5)^2 + (-0.6117694619049227 + x6)^2) + x211 * ((
    -0.7232635246380339 + x5)^2 + (-0.775046380224854 + x6)^2) + x212 * ((
    -0.3441150906887649 + x5)^2 + (-0.09591837784379154 + x6)^2) + x213 * ((
    -0.8978018174450971 + x5)^2 + (-0.11743401812053855 + x6)^2) + x214 * ((
    -0.55682365402602 + x5)^2 + (-0.9913046724886798 + x6)^2) + x215 * ((
    -0.3505034340325558 + x5)^2 + (-0.2614391117299726 + x6)^2) + x216 * ((
    -0.3824468288111288 + x5)^2 + (-0.20220584044474332 + x6)^2) + x217 * ((
    -0.7498554818721458 + x5)^2 + (-0.2980988319317168 + x6)^2) + x218 * ((
    -0.07321113686532232 + x5)^2 + (-0.5954543460403101 + x6)^2) + x219 * ((
    -0.2591946170455186 + x5)^2 + (-0.17900103418991686 + x6)^2) + x220 * ((
    -0.01679199868038328 + x5)^2 + (-0.8388400298206995 + x6)^2) + x221 * ((
    -0.37772078666940234 + x5)^2 + (-0.5999660129800334 + x6)^2) + x222 * ((
    -0.48068712289031845 + x5)^2 + (-0.869272912824029 + x6)^2) + x223 * ((
    -0.06731672306732117 + x5)^2 + (-0.633941896159872 + x6)^2) + x224 * ((
    -0.82972309353278 + x5)^2 + (-0.2819959347943841 + x6)^2) + x225 * ((
    -0.4336964173301845 + x5)^2 + (-0.3365710275789563 + x6)^2) + x226 * ((
    -0.32388608941489017 + x5)^2 + (-0.9453815506006258 + x6)^2) + x227 * ((
    -0.22860079388436005 + x5)^2 + (-0.7378173460947715 + x6)^2) + x228 * ((
    -0.044228036986523334 + x5)^2 + (-0.7815501177884507 + x6)^2) + x229 * ((
    -0.08043624219732093 + x5)^2 + (-0.7893569476421274 + x6)^2) + x230 * ((
    -0.06584041867144719 + x5)^2 + (-0.21534482582658754 + x6)^2) + x231 * ((
    -0.2637962086928157 + x5)^2 + (-0.2815287894707502 + x6)^2) + x232 * ((
    -0.7768911997798632 + x5)^2 + (-0.5045725783219106 + x6)^2) + x233 * ((
    -0.04578282615703744 + x5)^2 + (-0.18267404955070377 + x6)^2) + x234 * ((
    -0.4189753804741293 + x5)^2 + (-0.7106072440375385 + x6)^2) + x235 * ((
    -0.6406679155857211 + x5)^2 + (-0.48003679153199974 + x6)^2) + x236 * ((
    -0.8075575156075806 + x5)^2 + (-0.9463374617065154 + x6)^2) + x237 * ((
    -0.9494783754127006 + x5)^2 + (-0.991498001949757 + x6)^2) + x238 * ((
    -0.9193098198259494 + x5)^2 + (-0.9861536873250794 + x6)^2) + x239 * ((
    -0.7164219770083897 + x5)^2 + (-0.6923582419906285 + x6)^2) + x240 * ((
    -0.5833953772276935 + x5)^2 + (-0.39111319713457526 + x6)^2) + x241 * ((
    -0.837098292307243 + x5)^2 + (-0.38192022803643044 + x6)^2) + x242 * ((
    -0.9057165619357027 + x5)^2 + (-0.44142026666630774 + x6)^2) + x243 * ((
    -0.022143901365561658 + x5)^2 + (-0.8476360117762948 + x6)^2) + x244 * ((
    -0.48474449470792136 + x5)^2 + (-0.00459266186465912 + x6)^2) + x245 * ((
    -0.817975273750891 + x5)^2 + (-0.7943398076449755 + x6)^2) + x246 * ((
    -0.8763576508107064 + x5)^2 + (-0.4641969432665859 + x6)^2) + x247 * ((
    -0.16768907807527522 + x5)^2 + (-0.2170634659028503 + x6)^2) + x248 * ((
    -0.5373771347576884 + x5)^2 + (-0.6717398317968319 + x6)^2) + x249 * ((
    -0.5572182447521413 + x5)^2 + (-0.24059245819741681 + x6)^2) + x250 * ((
    -0.1478639049629319 + x5)^2 + (-0.9734391500956013 + x6)^2) + x251 * ((
    -0.9978674296675508 + x5)^2 + (-0.940321306057178 + x6)^2) + x252 * ((
    -0.5198249152613603 + x5)^2 + (-0.07814164651753441 + x6)^2) + x253 * ((
    -0.2206544748113004 + x5)^2 + (-0.5529047264313456 + x6)^2) + x254 * ((
    -0.8708713492140824 + x5)^2 + (-0.6958022669870113 + x6)^2) + x255 * ((
    -0.10823774288352628 + x5)^2 + (-0.915893092354332 + x6)^2) + x256 * ((
    -0.641766743884591 + x5)^2 + (-0.42982985602002743 + x6)^2) + x257 * ((
    -0.769965120581223 + x5)^2 + (-0.4093180346858043 + x6)^2) + x258 * ((
    -0.5395061655932872 + x5)^2 + (-0.025554298316395885 + x6)^2) + x259 * ((
    -0.07610548086145708 + x5)^2 + (-0.9300387630629019 + x6)^2) + x260 * ((
    -0.42188661474763056 + x5)^2 + (-0.7909513854242108 + x6)^2) + x261 * ((
    -0.371398443903442 + x5)^2 + (-0.3924282936519774 + x6)^2) + x262 * ((
    -0.11106976179816641 + x5)^2 + (-0.8961539552567241 + x6)^2) + x263 * ((
    -0.25225491988669413 + x5)^2 + (-0.7663134725002734 + x6)^2) + x264 * ((
    -0.1778448829280641 + x5)^2 + (-0.3035505722762858 + x6)^2) + x265 * ((
    -0.08846844345193006 + x5)^2 + (-0.695683685601309 + x6)^2) + x266 * ((
    -0.9178016597694366 + x5)^2 + (-0.627158371143039 + x6)^2) + x267 * ((
    -0.6443309388504812 + x5)^2 + (-0.2486686334041649 + x6)^2) + x268 * ((
    -0.9524214315197214 + x5)^2 + (-0.11319191562464526 + x6)^2) + x269 * ((
    -0.2503629075652184 + x5)^2 + (-0.5661083721487875 + x6)^2) + x270 * ((
    -0.6399923314007278 + x5)^2 + (-0.2871936662554734 + x6)^2) + x271 * ((
    -0.5909678451374885 + x5)^2 + (-0.11513193031994995 + x6)^2) + x272 * ((
    -0.04877753856435085 + x5)^2 + (-0.42558284132001833 + x6)^2) + x273 * ((
    -0.5769401342223824 + x5)^2 + (-0.882886241480543 + x6)^2) + x274 * ((
    -0.46693829720314983 + x5)^2 + (-0.9356416589786831 + x6)^2) + x275 * ((
    -0.7666488385496458 + x5)^2 + (-0.9715298035824393 + x6)^2) + x276 * ((
    -0.7090808859061516 + x5)^2 + (-0.4227160317233293 + x6)^2) + x277 * ((
    -0.6362788867985969 + x5)^2 + (-0.6897106599456068 + x6)^2) + x278 * ((
    -0.255234369371772 + x5)^2 + (-0.17269883755498971 + x6)^2) + x279 * ((
    -0.32354052437441105 + x5)^2 + (-0.5414620932536305 + x6)^2) + x280 * ((
    -0.05061498170688461 + x5)^2 + (-0.35735103685050085 + x6)^2) + x281 * ((
    -0.14474828789786598 + x5)^2 + (-0.935524701349798 + x6)^2) + x282 * ((
    -0.4521811868578507 + x5)^2 + (-0.5684301129850728 + x6)^2) + x283 * ((
    -0.1391588120468895 + x5)^2 + (-0.450912724117135 + x6)^2) + x284 * ((
    -0.9624575143884582 + x5)^2 + (-0.8342971742225577 + x6)^2) + x285 * ((
    -0.9119608671435646 + x5)^2 + (-0.16311646954688963 + x6)^2) + x286 * ((
    -0.8601502139251708 + x5)^2 + (-0.8094641566594614 + x6)^2) + x287 * ((
    -0.3789359642178741 + x5)^2 + (-0.34458507559213336 + x6)^2) + x288 * ((
    -0.9114125110384265 + x5)^2 + (-0.30087502888988404 + x6)^2) + x289 * ((
    -0.26441815851376227 + x5)^2 + (-0.6432639278749842 + x6)^2) + x290 * ((
    -0.5040138219051838 + x5)^2 + (-0.436711978156451 + x6)^2) + x291 * ((
    -0.42408540833910613 + x5)^2 + (-0.7144533169040485 + x6)^2) + x292 * ((
    -0.7222403067943077 + x5)^2 + (-0.44905804057404974 + x6)^2) + x293 * ((
    -0.9396234683501675 + x5)^2 + (-0.26913749666376663 + x6)^2) + x294 * ((
    -0.2790684514984879 + x5)^2 + (-0.38848808536128043 + x6)^2) + x295 * ((
    -0.0023428037609517505 + x5)^2 + (-0.5050951718570706 + x6)^2) + x296 * ((
    -0.4770114774545686 + x5)^2 + (-0.2671796475851538 + x6)^2) + x297 * ((
    -0.4508813622466006 + x5)^2 + (-0.4772479476478516 + x6)^2) + x298 * ((
    -0.5802987597800233 + x5)^2 + (-0.5447533523575115 + x6)^2) + x299 * ((
    -0.3417733382726399 + x5)^2 + (-0.36547565910865576 + x6)^2) + x300 * ((
    -0.8660746835055481 + x5)^2 + (-0.06852013071726426 + x6)^2) + x301 * ((
    -0.8912654289001969 + x5)^2 + (-0.13480953224510595 + x6)^2) + x302 * ((
    -0.1717093974981898 + x5)^2 + (-0.4333331682797753 + x6)^2) + x303 * ((
    -0.9880935005856811 + x5)^2 + (-0.22149623450972045 + x6)^2) + x304 * ((
    -0.05074359135359818 + x5)^2 + (-0.7593065812217639 + x6)^2) + x305 * ((
    -0.5089474327061579 + x5)^2 + (-0.13233399599992335 + x6)^2) + x306 * ((
    -0.8898331485351556 + x5)^2 + (-0.5844278795567586 + x6)^2))

@constraint(m, e1, x7 + x107 + x207 == 1)
@constraint(m, e2, x8 + x108 + x208 == 1)
@constraint(m, e3, x9 + x109 + x209 == 1)
@constraint(m, e4, x10 + x110 + x210 == 1)
@constraint(m, e5, x11 + x111 + x211 == 1)
@constraint(m, e6, x12 + x112 + x212 == 1)
@constraint(m, e7, x13 + x113 + x213 == 1)
@constraint(m, e8, x14 + x114 + x214 == 1)
@constraint(m, e9, x15 + x115 + x215 == 1)
@constraint(m, e10, x16 + x116 + x216 == 1)
@constraint(m, e11, x17 + x117 + x217 == 1)
@constraint(m, e12, x18 + x118 + x218 == 1)
@constraint(m, e13, x19 + x119 + x219 == 1)
@constraint(m, e14, x20 + x120 + x220 == 1)
@constraint(m, e15, x21 + x121 + x221 == 1)
@constraint(m, e16, x22 + x122 + x222 == 1)
@constraint(m, e17, x23 + x123 + x223 == 1)
@constraint(m, e18, x24 + x124 + x224 == 1)
@constraint(m, e19, x25 + x125 + x225 == 1)
@constraint(m, e20, x26 + x126 + x226 == 1)
@constraint(m, e21, x27 + x127 + x227 == 1)
@constraint(m, e22, x28 + x128 + x228 == 1)
@constraint(m, e23, x29 + x129 + x229 == 1)
@constraint(m, e24, x30 + x130 + x230 == 1)
@constraint(m, e25, x31 + x131 + x231 == 1)
@constraint(m, e26, x32 + x132 + x232 == 1)
@constraint(m, e27, x33 + x133 + x233 == 1)
@constraint(m, e28, x34 + x134 + x234 == 1)
@constraint(m, e29, x35 + x135 + x235 == 1)
@constraint(m, e30, x36 + x136 + x236 == 1)
@constraint(m, e31, x37 + x137 + x237 == 1)
@constraint(m, e32, x38 + x138 + x238 == 1)
@constraint(m, e33, x39 + x139 + x239 == 1)
@constraint(m, e34, x40 + x140 + x240 == 1)
@constraint(m, e35, x41 + x141 + x241 == 1)
@constraint(m, e36, x42 + x142 + x242 == 1)
@constraint(m, e37, x43 + x143 + x243 == 1)
@constraint(m, e38, x44 + x144 + x244 == 1)
@constraint(m, e39, x45 + x145 + x245 == 1)
@constraint(m, e40, x46 + x146 + x246 == 1)
@constraint(m, e41, x47 + x147 + x247 == 1)
@constraint(m, e42, x48 + x148 + x248 == 1)
@constraint(m, e43, x49 + x149 + x249 == 1)
@constraint(m, e44, x50 + x150 + x250 == 1)
@constraint(m, e45, x51 + x151 + x251 == 1)
@constraint(m, e46, x52 + x152 + x252 == 1)
@constraint(m, e47, x53 + x153 + x253 == 1)
@constraint(m, e48, x54 + x154 + x254 == 1)
@constraint(m, e49, x55 + x155 + x255 == 1)
@constraint(m, e50, x56 + x156 + x256 == 1)
@constraint(m, e51, x57 + x157 + x257 == 1)
@constraint(m, e52, x58 + x158 + x258 == 1)
@constraint(m, e53, x59 + x159 + x259 == 1)
@constraint(m, e54, x60 + x160 + x260 == 1)
@constraint(m, e55, x61 + x161 + x261 == 1)
@constraint(m, e56, x62 + x162 + x262 == 1)
@constraint(m, e57, x63 + x163 + x263 == 1)
@constraint(m, e58, x64 + x164 + x264 == 1)
@constraint(m, e59, x65 + x165 + x265 == 1)
@constraint(m, e60, x66 + x166 + x266 == 1)
@constraint(m, e61, x67 + x167 + x267 == 1)
@constraint(m, e62, x68 + x168 + x268 == 1)
@constraint(m, e63, x69 + x169 + x269 == 1)
@constraint(m, e64, x70 + x170 + x270 == 1)
@constraint(m, e65, x71 + x171 + x271 == 1)
@constraint(m, e66, x72 + x172 + x272 == 1)
@constraint(m, e67, x73 + x173 + x273 == 1)
@constraint(m, e68, x74 + x174 + x274 == 1)
@constraint(m, e69, x75 + x175 + x275 == 1)
@constraint(m, e70, x76 + x176 + x276 == 1)
@constraint(m, e71, x77 + x177 + x277 == 1)
@constraint(m, e72, x78 + x178 + x278 == 1)
@constraint(m, e73, x79 + x179 + x279 == 1)
@constraint(m, e74, x80 + x180 + x280 == 1)
@constraint(m, e75, x81 + x181 + x281 == 1)
@constraint(m, e76, x82 + x182 + x282 == 1)
@constraint(m, e77, x83 + x183 + x283 == 1)
@constraint(m, e78, x84 + x184 + x284 == 1)
@constraint(m, e79, x85 + x185 + x285 == 1)
@constraint(m, e80, x86 + x186 + x286 == 1)
@constraint(m, e81, x87 + x187 + x287 == 1)
@constraint(m, e82, x88 + x188 + x288 == 1)
@constraint(m, e83, x89 + x189 + x289 == 1)
@constraint(m, e84, x90 + x190 + x290 == 1)
@constraint(m, e85, x91 + x191 + x291 == 1)
@constraint(m, e86, x92 + x192 + x292 == 1)
@constraint(m, e87, x93 + x193 + x293 == 1)
@constraint(m, e88, x94 + x194 + x294 == 1)
@constraint(m, e89, x95 + x195 + x295 == 1)
@constraint(m, e90, x96 + x196 + x296 == 1)
@constraint(m, e91, x97 + x197 + x297 == 1)
@constraint(m, e92, x98 + x198 + x298 == 1)
@constraint(m, e93, x99 + x199 + x299 == 1)
@constraint(m, e94, x100 + x200 + x300 == 1)
@constraint(m, e95, x101 + x201 + x301 == 1)
@constraint(m, e96, x102 + x202 + x302 == 1)
@constraint(m, e97, x103 + x203 + x303 == 1)
@constraint(m, e98, x104 + x204 + x304 == 1)
@constraint(m, e99, x105 + x205 + x305 == 1)
@constraint(m, e100, x106 + x206 + x306 == 1)
